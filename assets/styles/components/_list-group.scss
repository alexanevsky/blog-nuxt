.list-group {
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  @include border-radius($list-group-border-radius);
  @include box-shadow($list-group-box-shadow);
}


// Individual list items
.list-group-item {
  width: 100%;
  position: relative;
  display: block;
  padding: $list-group-item-padding-y $list-group-item-padding-x;
  color: $list-group-color;
  text-decoration: if($link-decoration == none, null, none);
  background-color: $list-group-bg;
  border: $list-group-border-width solid $list-group-border-color;

  &:first-child {
    @include border-top-radius(inherit);
  }

  &:last-child {
    @include border-bottom-radius(inherit);
  }

  &.active {
    z-index: 2;
    background-color: $list-group-active-bg;
    border-color: $list-group-active-border-color;
    color: $list-group-active-color;
  }

  @at-root a#{&} {
    @include hover-focus() {
      z-index: 1;
      background-color: $list-group-hover-bg;
      border-color: $list-group-hover-border-color;
      color: $list-group-hover-color;
      text-decoration: none;
    }

    @include active() {
      z-index: 2;
      background-color: $list-group-active-bg;
      border-color: $list-group-active-border-color;
      color: $list-group-active-color;
    }
  }

  @include disabled() {
    background-color: $list-group-disabled-bg;
    color: $list-group-disabled-color;
    pointer-events: none;
  }

  & + & {
    border-top-width: 0;

    &.active {
      margin-top: -$list-group-border-width;
      border-top-width: $list-group-border-width;
    }
  }
}


// Horizontal
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .list-group-horizontal#{$infix} {
      flex-direction: row;

      & > .list-group-item {
        &:first-child {
          @include border-bottom-left-radius($list-group-border-radius);
          @include border-top-right-radius(0);
        }

        &:last-child {
          @include border-top-right-radius($list-group-border-radius);
          @include border-bottom-left-radius(0);
        }

        @include active() {
          margin-top: 0;
        }

        & + .list-group-item {
          border-top-width: $list-group-border-width;
          border-left-width: 0;

          @include active() {
            margin-left: -$list-group-border-width;
            border-left-width: $list-group-border-width;
          }
        }
      }
    }
  }
}


// Flush list items
.list-group-flush {
  @include border-radius(0);

  & > .list-group-item {
    border-width: 0 0 $list-group-border-width;

    &:last-child {
      border-bottom-width: 0;
    }
  }
}
